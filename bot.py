import os
import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

API_TOKEN = os.getenv('API_TOKEN')

if not API_TOKEN:
    logger.error("API_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")
    exit(1)

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

@dp.message(Command("start"))
async def send_welcome(message: types.Message):
    kb = [
        [types.KeyboardButton(text="06.10 - 10.10 II –Ω–µ–¥–µ–ª—è")],
        [types.KeyboardButton(text="13.10 - 17.10 I –Ω–µ–¥–µ–ª—è")],
        [types.KeyboardButton(text="20.10 - 24.10 II –Ω–µ–¥–µ–ª—è")],
        [types.KeyboardButton(text="27.10 - 31.10 I –Ω–µ–¥–µ–ª—è")]
    ]
    keyboard = types.ReplyKeyboardMarkup(
        keyboard=kb, 
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–¥–µ–ª—é"
    )
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ üóì", reply_markup=keyboard)

@dp.message(lambda message: message.text == "06.10 - 10.10 II –Ω–µ–¥–µ–ª—è")
async def handle_week1(message: types.Message):
    schedule_text = """
<b> üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ II –Ω–µ–¥–µ–ª—é 06.10 - 10.10 </b>

<i> 06.10 –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ </i>
‚Ä¢ 9:40 - 11:10   –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–õ–µ–∫—Ü–∏—è)  –ê 318
‚Ä¢ 11:20 - 12:50   –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–õ–µ–∫—Ü–∏—è)  –ê 318

<i> 07.10 –í—Ç–æ—Ä–Ω–∏–∫ </i>
‚Ä¢ 11:20 - 12:50   –§–ö–∏–° (–ü—Ä.)  –í 404
‚Ä¢ 14:50 - 16:20   –ò–Ø (–ü—Ä. 2 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –ê 217
‚Ä¢ 16:30 - 18:00   –ò–Ø (–ü—Ä. 2 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –ê 217

<i> 08.10 –°—Ä–µ–¥–∞ </i>
‚Ä¢ 9:40 - 11:10   –ò–† (–õ–µ–∫—Ü–∏—è)  –ê 354
‚Ä¢ 11:20 - 12:50   –î–ö–∏–†–Ø (–õ–µ–∫—Ü–∏—è)  –ê 354

<i> 09.10 –ß–µ—Ç–≤–µ—Ä–≥ </i>
‚Ä¢ 8:00 - 9:30   –ò–∏–ö–ì (–õ–ë 2 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 121
‚Ä¢ 9:40 - 11:10   –ò–∏–ö–ì (–õ–ë 2 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 121
‚Ä¢ 11:20 - 12:50   –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü—Ä.)  –í 504
‚Ä¢ 13:10 - 14:40   –§–∏–∑–∏–∫–∞ (–õ–ë 1 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 509
‚Ä¢ 14:50 - 16:20   –§–∏–∑–∏–∫–∞ (–õ–ë 1 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 509

<i> 10.10 –ü—è—Ç–Ω–∏—Ü–∞ </i>
‚Ä¢ 11:20 - 12:50   –î–ö–∏–†–Ø (–ü—Ä.)  –ê 318
‚Ä¢ 13:10 - 14:40   –ò–† (–ü—Ä.)  –ê 436
‚Ä¢ 14:50 - 16:20   –≠–ö–ø–æ–§–ö–∏–° (–ü—Ä.) –í —Å–ø–æ—Ä—Ç.–∑–∞–ª
    """
    await message.answer(schedule_text, parse_mode="HTML")

@dp.message(lambda message: message.text == "13.10 - 17.10 I –Ω–µ–¥–µ–ª—è")
async def handle_week1(message: types.Message):
    schedule_text = """
<b> üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ I –Ω–µ–¥–µ–ª—é 13.10 - 17.10 </b>

<i> 13.10 –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ </i>

‚Ä¢ 8:00 - 9:30   –§–ö–∏–° (–õ–µ–∫—Ü–∏—è)  –ê 318
‚Ä¢ 9:40 - 11:10   –§–∏–∑–∏–∫–∞ (–õ–µ–∫—Ü–∏—è)  –ê 318
‚Ä¢ 11:20 - 12:50   –ò–Ø (–õ–µ–∫—Ü–∏—è)  –ê 318

<i> 14.10 –í—Ç–æ—Ä–Ω–∏–∫ </i>

‚Ä¢ 11:20 - 12:50   –≠–ö–ø–æ–§–ö–∏–° (–ü—Ä.)  –í —Å–ø–æ—Ä—Ç.–∑–∞–ª
‚Ä¢ 14:50 - 16:20   –ò–Ø (–ü—Ä. 1 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –ê 217
‚Ä¢ 16:30 - 18:00   –ò–Ø (–ü—Ä. 1 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –ê 217

<i> 15.10 –°—Ä–µ–¥–∞ </i>

‚Ä¢ 9:40 - 11:10   –ò–† (–õ–µ–∫—Ü–∏—è)  –ê 354
‚Ä¢ 11:20 - 12:50   –î–ö–∏–†–Ø (–õ–µ–∫—Ü–∏—è)  –ê 354

<i> 16.10 –ß–µ—Ç–≤–µ—Ä–≥ </i>

‚Ä¢ 8:00 - 9:30   –ò–∏–ö–ì (–õ–ë 1 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 121
‚Ä¢ 9:40 - 11:10   –ò–∏–ö–ì (–õ–ë 1 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 121
‚Ä¢ 11:20 - 12:50   –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü—Ä.)  –í 504
‚Ä¢ 13:10 - 14:40   –§–∏–∑–∏–∫–∞ (–õ–ë 2 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 509
‚Ä¢ 14:50 - 16:20   –§–∏–∑–∏–∫–∞ (–õ–ë 2 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 509

<i> 17.10 –ü—è—Ç–Ω–∏—Ü–∞ </i>

‚Ä¢ 11:20 - 12:50   –î–ö–∏–†–Ø (–ü—Ä.)  –ê 318
‚Ä¢ 13:10 - 14:40   –ò–† (–ü—Ä.)  –ê 436
‚Ä¢ 14:50 - 16:20   –≠–ö–ø–æ–§–ö–∏–° (–ü—Ä.) –í —Å–ø–æ—Ä—Ç.–∑–∞–ª
    """
    await message.answer(schedule_text, parse_mode="HTML")

@dp.message(lambda message: message.text == "20.10 - 24.10 II –Ω–µ–¥–µ–ª—è")
async def handle_week22(message: types.Message):
    schedule_text = """
<b> üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ II –Ω–µ–¥–µ–ª—é 06.10 - 10.10 </b>

<i> 20.10 –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ </i>

‚Ä¢ 9:40 - 11:10   –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–õ–µ–∫—Ü–∏—è)  –ê 318
‚Ä¢ 11:20 - 12:50   –ò–∏–ö–ì (–õ–µ–∫—Ü–∏—è)  –ê 318

<i> 21.10 –í—Ç–æ—Ä–Ω–∏–∫ </i>

‚Ä¢ 11:20 - 12:50   –§–ö–∏–° (–ü—Ä.)  –í 404
‚Ä¢ 14:50 - 16:20   –ò–Ø (–ü—Ä. 2 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –ê 217
‚Ä¢ 16:30 - 18:00   –ò–Ø (–ü—Ä. 2 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –ê 217

<i> 22.10 –°—Ä–µ–¥–∞ </i>

‚Ä¢ 9:40 - 11:10   –ò–† (–õ–µ–∫—Ü–∏—è)  –ê 354
‚Ä¢ 11:20 - 12:50   –î–ö–∏–†–Ø (–õ–µ–∫—Ü–∏—è)  –ê 354

<i> 23.10 –ß–µ—Ç–≤–µ—Ä–≥ </i>

‚Ä¢ 8:00 - 9:30   –ò–∏–ö–ì (–õ–ë 2 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 121
‚Ä¢ 9:40 - 11:10   –ò–∏–ö–ì (–õ–ë 2 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 121
‚Ä¢ 11:20 - 12:50   –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü—Ä.)  –í 504
‚Ä¢ 13:10 - 14:40   –§–∏–∑–∏–∫–∞ (–õ–ë 1 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 509
‚Ä¢ 14:50 - 16:20   –§–∏–∑–∏–∫–∞ (–õ–ë 1 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 509

<i> 24.10 –ü—è—Ç–Ω–∏—Ü–∞ </i>

‚Ä¢ 11:20 - 12:50   –î–ö–∏–†–Ø (–ü—Ä.)  –ê 318
‚Ä¢ 13:10 - 14:40   –ò–† (–ü—Ä.)  –ê 436
‚Ä¢ 14:50 - 16:20   –≠–ö–ø–æ–§–ö–∏–° (–ü—Ä.) –í —Å–ø–æ—Ä—Ç.–∑–∞–ª
    """
    await message.answer(schedule_text, parse_mode="HTML")

@dp.message(lambda message: message.text == "27.10 - 31.10 I –Ω–µ–¥–µ–ª—è")
async def handle_week11(message: types.Message):
    schedule_text = """
<b> üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ I –Ω–µ–¥–µ–ª—é 27.10 - 31.10 </b>

<i> 27.10 –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ </i>

‚Ä¢ 8:00 - 9:30   –§–ö–∏–° (–õ–µ–∫—Ü–∏—è)  –ê 318
‚Ä¢ 9:40 - 11:10   –§–∏–∑–∏–∫–∞ (–õ–µ–∫—Ü–∏—è)  –ê 318
‚Ä¢ 11:20 - 12:50   –ò–Ø (–õ–µ–∫—Ü–∏—è)  –ê 318

<i> 28.10 –í—Ç–æ—Ä–Ω–∏–∫ </i>

‚Ä¢ 11:20 - 12:50   –≠–ö–ø–æ–§–ö–∏–° (–ü—Ä.)  –í —Å–ø–æ—Ä—Ç.–∑–∞–ª
‚Ä¢ 14:50 - 16:20   –ò–Ø (–ü—Ä. 1 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –ê 217
‚Ä¢ 16:30 - 18:00   –ò–Ø (–ü—Ä. 1 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –ê 217

<i> 29.10 –°—Ä–µ–¥–∞ </i>

‚Ä¢ 9:40 - 11:10   –ò–† (–õ–µ–∫—Ü–∏—è)  –ê 354
‚Ä¢ 11:20 - 12:50   –î–ö–∏–†–Ø (–õ–µ–∫—Ü–∏—è)  –ê 354

<i> 30.10 –ß–µ—Ç–≤–µ—Ä–≥ </i>

‚Ä¢ 8:00 - 9:30   –ò–∏–ö–ì (–õ–ë 1 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 121
‚Ä¢ 9:40 - 11:10   –ò–∏–ö–ì (–õ–ë 1 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 121
‚Ä¢ 11:20 - 12:50   –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞ (–ü—Ä.)  –í 504
‚Ä¢ 13:10 - 14:40   –§–∏–∑–∏–∫–∞ (–õ–ë 2 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 509
‚Ä¢ 14:50 - 16:20   –§–∏–∑–∏–∫–∞ (–õ–ë 2 –ø–æ–¥–≥—Ä—É–ø–ø–∞)  –í 509

<i> 31.10 –ü—è—Ç–Ω–∏—Ü–∞ </i>

‚Ä¢ 11:20 - 12:50   –î–ö–∏–†–Ø (–ü—Ä.)  –ê 318
‚Ä¢ 13:10 - 14:40   –ò–† (–ü—Ä.)  –ê 436
‚Ä¢ 14:50 - 16:20   –≠–ö–ø–æ–§–ö–∏–° (–ü—Ä.) –í —Å–ø–æ—Ä—Ç.–∑–∞–ª
    """
    await message.answer(schedule_text, parse_mode="HTML")

@dp.message()
async def handle_other_messages(message: types.Message):
    await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–µ–¥–µ–ª–∏ –∏–ª–∏ –∫–æ–º–∞–Ω–¥—É /start")

async def main():
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –Ω–∞ Render...")
    try:
        bot_info = await bot.get_me()
        logger.info(f"‚úÖ –ë–æ—Ç @{bot_info.username} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!")
        await dp.start_polling(bot)
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())
